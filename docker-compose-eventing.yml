version: '3.2'

services:
  zoo:
    container_name: kr_event_zookeeper
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: kr-zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2181:2888
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      kr_network: 
        ipv4_address: 192.168.10.3
  
  kafkab1:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kr-kafkab1
    container_name: kr_event_kafkab1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kr-kafkab1:19092,EXTERNAL://${DOCKER_HOST:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "kr-zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"      
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    networks:
      kr_network: 
        ipv4_address: 192.168.10.4

  kafkab2:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kr-kafkab2
    container_name: kr_event_kafkab2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kr-kafkab2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "kr-zoo:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    networks:
      kr_network: 
        ipv4_address: 192.168.10.5
  
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    hostname: kr-schema-registry
    container_name: kr_event_kafka_schema_registry
    depends_on:
      - zoo
      - kafkab1
      - kafkab2
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kr-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kr-kafkab1:19092,PLAINTEXT://kr-kafkab2:19093'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      kr_network: 
        ipv4_address: 192.168.10.6