version: '3.2'

services:
    redis:
      container_name: kr_redis
      image: kr_cache_redis:${RUNTIME_VERSION}
      labels:
        com.acc.cache.description: "KR cache store - redis"
      restart: always     
      build:
        context: .
        dockerfile: .docker/.source/redis.dockerfile
      ports:
        - "6379:6379"
      networks:
        kr_network: 
          ipv4_address: 192.168.10.2

    postgress:
      container_name: kr_postgres
      image: kr_db_postgres:${RUNTIME_VERSION}
      labels:
        com.acc.data.description: "KR database - postgres"
      restart: always
      env_file:
        - .docker/.env/postgres.prod.env
      build:
        context: .
        dockerfile: .docker/.source/postgres.dockerfile
        cache_from:
          - postgres:latest       
      volumes:
        - 'kr_dbvolume:/var/lib/postgresql/data'
      ports:
        - "5432:5432"
      networks:
        kr_network: 
          ipv4_address: 192.168.10.3

    rabbit:
      container_name: kr_msgqueue
      image: kr_mq_rabbit:${RUNTIME_VERSION}
      labels:
        com.acc.queue.description: "KR message queue - rabbit"
      restart: always
      env_file:
        - .docker/.env/rabbit.prod.env
      build:
        context: .
        dockerfile: .docker/.source/rabbit.dockerfile
        cache_from:
          - rabbitmq:latest      
      volumes:
        - 'kr_datavolume:/var/lib/rabbit/data'
      ports:
        - "15672:15672"
        - "5672:5672"
      networks:
        kr_network: 
          ipv4_address: 192.168.10.4